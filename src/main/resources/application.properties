spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:127.0.0.1:3303}/db_proposta?serverTimezone=America/Sao_Paulo&createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=admin

spring.server.error.include-message=always
server.error.include-binding-errors=always

# JPA
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# config console spring
spring.output.ansi.enabled = ALWAYS

# serviços externos

# API analise financeira
url-api-solicitacao-analise = ${DADOS_FINANCEIROS:http://localhost:9999}/api

#API cartões
url-api-cartoes = ${ANALISE_CARTAO:http://localhost:8888}/api/cartoes

# actuator
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=info,health,prometheus
info.app.version=@project.name@
info.app.name=@project.version@

# micrometer exposure prometheus
management.endpoints.prometheus.enabled=true
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:serviço de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}

# scheduling
peridiocidade.executa-operacao = 60000

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/api-proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/api-proposta/protocol/openid-connect/certs}

# message rest template
server-analise-cartao-not-response = Servidor de cartões fora do ar!!
server-analise-credito-not-response = Servidor de análise de crédito fora do ar!!

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=nosso-cartao-proposta

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}


